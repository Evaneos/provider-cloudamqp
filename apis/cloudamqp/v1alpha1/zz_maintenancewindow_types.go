// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type MaintenanceWindowInitParameters struct {

	// Allow scheduling of a maintenance for version update
	// once a new LavinMQ version been released.
	// Enable automatic updates
	AutomaticUpdates *string `json:"automaticUpdates,omitempty" tf:"automatic_updates,omitempty"`

	// The CloudAMQP instance ID.
	// Instance identifier
	// +crossplane:generate:reference:type=github.com/evaneos/provider-cloudamqp/apis/cloudamqp/v1alpha1.Instance
	InstanceID *float64 `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a Instance in cloudamqp to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance in cloudamqp to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Preferred day of the week when to schedule maintenance.
	// Preferred day of the week when to run maintenance
	PreferredDay *string `json:"preferredDay,omitempty" tf:"preferred_day,omitempty"`

	// Preferred time (UTC) of the day when to schedule maintenance.
	// Preferred time (UTC) the day when to run maintenance
	PreferredTime *string `json:"preferredTime,omitempty" tf:"preferred_time,omitempty"`
}

type MaintenanceWindowObservation struct {

	// Allow scheduling of a maintenance for version update
	// once a new LavinMQ version been released.
	// Enable automatic updates
	AutomaticUpdates *string `json:"automaticUpdates,omitempty" tf:"automatic_updates,omitempty"`

	// The identifier for this resource (will be same as instance identifier).
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The CloudAMQP instance ID.
	// Instance identifier
	InstanceID *float64 `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Preferred day of the week when to schedule maintenance.
	// Preferred day of the week when to run maintenance
	PreferredDay *string `json:"preferredDay,omitempty" tf:"preferred_day,omitempty"`

	// Preferred time (UTC) of the day when to schedule maintenance.
	// Preferred time (UTC) the day when to run maintenance
	PreferredTime *string `json:"preferredTime,omitempty" tf:"preferred_time,omitempty"`
}

type MaintenanceWindowParameters struct {

	// Allow scheduling of a maintenance for version update
	// once a new LavinMQ version been released.
	// Enable automatic updates
	// +kubebuilder:validation:Optional
	AutomaticUpdates *string `json:"automaticUpdates,omitempty" tf:"automatic_updates,omitempty"`

	// The CloudAMQP instance ID.
	// Instance identifier
	// +crossplane:generate:reference:type=github.com/evaneos/provider-cloudamqp/apis/cloudamqp/v1alpha1.Instance
	// +kubebuilder:validation:Optional
	InstanceID *float64 `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a Instance in cloudamqp to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance in cloudamqp to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Preferred day of the week when to schedule maintenance.
	// Preferred day of the week when to run maintenance
	// +kubebuilder:validation:Optional
	PreferredDay *string `json:"preferredDay,omitempty" tf:"preferred_day,omitempty"`

	// Preferred time (UTC) of the day when to schedule maintenance.
	// Preferred time (UTC) the day when to run maintenance
	// +kubebuilder:validation:Optional
	PreferredTime *string `json:"preferredTime,omitempty" tf:"preferred_time,omitempty"`
}

// MaintenanceWindowSpec defines the desired state of MaintenanceWindow
type MaintenanceWindowSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     MaintenanceWindowParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider MaintenanceWindowInitParameters `json:"initProvider,omitempty"`
}

// MaintenanceWindowStatus defines the observed state of MaintenanceWindow.
type MaintenanceWindowStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MaintenanceWindowObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// MaintenanceWindow is the Schema for the MaintenanceWindows API. Update the preferred maintenance window.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudamqp}
type MaintenanceWindow struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              MaintenanceWindowSpec   `json:"spec"`
	Status            MaintenanceWindowStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MaintenanceWindowList contains a list of MaintenanceWindows
type MaintenanceWindowList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MaintenanceWindow `json:"items"`
}

// Repository type metadata.
var (
	MaintenanceWindow_Kind             = "MaintenanceWindow"
	MaintenanceWindow_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MaintenanceWindow_Kind}.String()
	MaintenanceWindow_KindAPIVersion   = MaintenanceWindow_Kind + "." + CRDGroupVersion.String()
	MaintenanceWindow_GroupVersionKind = CRDGroupVersion.WithKind(MaintenanceWindow_Kind)
)

func init() {
	SchemeBuilder.Register(&MaintenanceWindow{}, &MaintenanceWindowList{})
}
